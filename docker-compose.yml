version: '3.8'
services:
# Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "Topic1:1:1,Topic2:1:1:compact"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka
# Database
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=veilarbvarsel
    ports:
      - 5100:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
# IBM MQ (Docs: https://github.com/ibm-messaging/mq-container/blob/master/docs/developer-config.md)
  mqseries:
    image: ibmcom/mq:latest
    ports:
      - "1414:1414"
      - "9443:9443"
    hostname: mq
    environment:
      - LICENSE=accept
      - MQ_QMGR_NAME=QM1
    container_name: mqserver
    stdin_open: true
    tty: true
    restart: always