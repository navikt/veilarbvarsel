version: '3.8'
services:
# Kafka
  zookeeper:
    container_name: zookeeper
    networks:
      dittnav.docker-internal:
        aliases:
          - zookeeper.dittnav.docker-internal
    image: "confluentinc/cp-zookeeper:5.5.0"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  kafka:
    container_name: kafka
    networks:
      dittnav.docker-internal:
        aliases:
          - kafka.dittnav.docker-internal
    image: "confluentinc/cp-kafka:5.5.0"
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      ADV_HOST: "kafka.dittnav.docker-internal"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper.dittnav.docker-internal:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka.dittnav.docker-internal:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092"]
      interval: 20s
      timeout: 5s
      retries: 8
  kafdrop:
    container_name: kafdrop
    networks:
      dittnav.docker-internal:
        aliases:
          - kafdrop.dittnav.docker-internal
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka.dittnav.docker-internal:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka
  schema-registry:
    container_name: schema-registry
    networks:
      dittnav.docker-internal:
        aliases:
          - schema-registry.dittnav.docker-internal
    image: "confluentinc/cp-schema-registry:5.5.0"
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka.dittnav.docker-internal:9092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry.dittnav.docker-internal"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
# Database
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=veilarbvarsel
    ports:
      - 5100:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
# IBM MQ (Docs: https://github.com/ibm-messaging/mq-container/blob/master/docs/developer-config.md)
  mqseries:
    image: ibmcom/mq:latest
    ports:
      - "1414:1414"
      - "9443:9443"
    hostname: mq
    environment:
      - LICENSE=accept
      - MQ_QMGR_NAME=QM1
    container_name: mqserver
    stdin_open: true
    tty: true
    restart: always

networks:
  dittnav.docker-internal: